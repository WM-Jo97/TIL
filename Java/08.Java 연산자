항과 연산자

    항 : 연산에 사용되는 값
    연산자 : 항을 이용하여 연산하는 기호

대입 연산자

    변수에 다른 변수나 값을 대입하는 연산자
    이항 연산자 중 우선 순위가 가장 낮은 연산자들
    왼쪽 변수 = 오른쪽 변수 (또는 식, 값)

부호 연산자

    단항 연산자
    변수의 부호를 유지하거나 바꿈
    실제 변수의 부호가 변하려면 대입 연산자를 사용해야 함

산술 연산자

    + : 두 항을 더함
    - : 앞항 - 뒤항
    * : 합의 곱
    / : 나눈 몫
    % : 나머지

복합 대입 연산자

    += : 두항의 값을 더해서 왼쪽 항에 대입
    -= : 왼쪽항에서 오른쪽 항을 뺴서 왼쪽항에 대입
    *= : 두 항의 값을 곱해서 왼쪽항에 대입
    /= : 왼쪽 항을 오른쪽 항으로 나누어 그 몫을 왼쪽 항에 대입
    %= : 왼쪽 항을 오른쪽 항으ㅏ로 나누어 그 나머지를 왼쪽 항에 대입
    <<= : 비트를 왼쪽으로 이동하고 그 값을 왼쪽항에 대입
    >>= : 비트를 오른쪽이로 이동하고 그 값을 왼쪽 항에 대입
    >>> = : 비트를 오른쪽으로 이동하고 왼쪽항에 대입 (왼쪽에 채워지는 비트값 = 0)
    &= : 두항의 & 비트 연산 후 그 값을 왼쪽 항에 대입
    |= : 두 항의  | 비트 연산 후 값을 왼쪽 항에 대입
    ^= : 두항의 ^ 비트 연산 후 그 값을 왼쪽 항에 대입

증가, 감소 연산자

    단항 연산자
    변수의 값을 1더하거나 1뺄 때 사용
    연산자가 항의 앞에 있는가 뒤에 있는가에 따라 연산 시점과 결과가 달라짐
    문장의 끝을 기준으로 연산 시점을 생각해야 함

    ++ : 항의 값에 1을 더함 
        val = ++num; : 스테이트먼트가 끝나기 전에 +1
        val = num++; : 스테이트먼트가 끝나고 +1

    -- : 항의 값에서 1을 뻄
        val = --num; : 스테이트먼트가 끝나기 전에 -1
        val = num--; : 스테이트먼트가 끝나고 -1
